apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "ru.ticketeen"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "ru.ticketeen.MockTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.google.code.gson:gson:2.8.1'

    compile 'io.reactivex:rxjava:1.1.6'
    compile 'io.reactivex:rxandroid:1.2.1'

    compile 'com.android.support:design:' + rootProject.supportLibVersion;
    compile 'com.android.support:appcompat-v7:' + rootProject.supportLibVersion;
    compile 'com.android.support:support-v4:' + rootProject.supportLibVersion;
    compile 'com.android.support:recyclerview-v7:' + rootProject.supportLibVersion;
    compile 'com.android.support:design:' + rootProject.supportLibVersion;
    compile 'com.android.support:cardview-v7:' + rootProject.supportLibVersion;

    compile 'android.arch.lifecycle:extensions:' + rootProject.archLifecycleVersion;
    compile 'android.arch.persistence.room:runtime:' + rootProject.archRoomVersion;

    annotationProcessor "android.arch.lifecycle:compiler:" + rootProject.archLifecycleVersion;
    annotationProcessor "android.arch.persistence.room:compiler:" + rootProject.archRoomVersion;

    // for di
    compile "com.google.dagger:dagger:2.8"
    compile 'javax.inject:javax.inject:1'
    provided 'javax.annotation:jsr250-api:1.0'
    annotationProcessor "com.google.dagger:dagger-compiler:2.8"

    // Testing-only dependencies
    // Force usage of support annotations in the test app, since it is internally used by the runner module.
    androidTestCompile 'com.android.support:support-annotations:' + rootProject.supportLibVersion;
    androidTestCompile 'com.android.support.test:runner:' + rootProject.runnerVersion;
    androidTestCompile 'com.android.support.test:rules:' + rootProject.rulesVersion;
    androidTestCompile 'com.android.support.test.espresso:espresso-core:' + rootProject.espressoVersion;
    androidTestCompile 'com.android.support.test.espresso:espresso-contrib:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    // add this for intent mocking support
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:' + rootProject.espressoVersion;
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    testCompile "com.google.dagger:dagger:2.8"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:2.8"
    testCompile 'com.squareup.okhttp3:mockwebserver:3.8.1'
    testCompile 'org.mockito:mockito-all:' + rootProject.mockitoVersion;
    testCompile 'android.arch.core:core-testing:' + rootProject.architectureComponentsVersion;

    compile 'com.android.support.constraint:constraint-layout:1.0.2'
}
